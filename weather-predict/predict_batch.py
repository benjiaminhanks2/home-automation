import argparse

import numpy as np
from sklearn.externals import joblib
from keras.models import load_model

from data_source.FileDataProvider import FileDataProvider
import config


argparse = argparse.ArgumentParser()
argparse.add_argument("-f", "--test-file", required=True, dest="test_file",
                      help="Input CSV test file generated by data_extractor")
args = vars(argparse.parse_args())

file_data_provider = FileDataProvider()

scaler = joblib.load(config.model['sklearn_scaler_file_name'])
classifier = load_model(config.model['keras_model_file_name'])

X_test, y_test = file_data_provider.get(args['test_file'])
i = good = 0

for test_data in X_test:
    y_pred = classifier.predict(scaler.transform(np.array([test_data])))
    actual_rain = True if y_test[i] == 1 else False
    predicted_rain = (y_pred > 0.5)
    if (predicted_rain == True and y_test[i] == 1) or (predicted_rain == False and y_test[i] == 0):
        good += 1
    print("Index: {0}, Actual, Predicted: {1}|{2}". format(i, actual_rain, predicted_rain))
    i += 1

print ('Total: {0}, Good: {1}, Percent accuracy: {2} '.format(i, good, good * 100 / i))